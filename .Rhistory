###### saving the plots for learners from different countries
country_layout = rbind(c(1,1), c(2,2))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout = country_layout )
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
###### saving the plots for learners from different countries
country_layout = rbind(c(1,1), c(1,1), c(2,2))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(1,1), c(1,1),)
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(1,1), c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
arche_plot = ggplot() +
geom_bar(data = all_archetype, mapping = aes(archetype,fill=archetype), stat = "count", group = 1) +
geom_line(data = arche_participants, mapping = aes(archetype,  color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = arche_participants, mapping = aes(archetype, color = "fully participated") , stat = "count", group = 1, size = 3) +
theme(legend.key=element_blank(),
legend.box="vertical", text = element_text(size = 15)) +
scale_colour_manual(" ", values=c("fully participated" = "black")) +
ylab("No. of learners")
arche_plot
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/archetype_enrolled_Vs_completed.png",width = 1920, height = 1080)
ggarrange(arche_plot)
dev.off()
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
#######
plot_countries = ggplot(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1)) +
geom_line(size = 1)+
geom_point(color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 10))
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
#######
plot_countries = ggplot(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1)) +
geom_line(size = 1)+
geom_point(color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 17))
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
#######
plot_countries = ggplot(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1)) +
geom_line(size = 1)+
geom_point(color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 17), axis.text.x =  element_text(size = 12))
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
#######
plot_countries = ggplot(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1)) +
geom_line(size = 1)+
geom_point(color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col(color = "black") +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
scale_fill_brewer(palette = "Pastel1") +
theme(text= element_text(size = 20))
top9_countries
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
View(all_video_stats)
all_views = all_video_stats %>% group_by(title) %>% summarize(views = sum(total_views))
View(all_views)
all_views$captions = all_video_stats %>% group_by(title) %>% summarize(captions = sum(total_caption_views))$captions
z = all_video_stats %>% group_by(title) %>% summarize(captions = sum(total_caption_views))
View(z)
all_views$captions = (all_video_stats %>% group_by(title) %>% summarize(captions = sum(total_caption_views)))$captions
all_views$transcript = (all_video_stats %>% group_by(title) %>% summarize(transcript = sum(total_transcript_views)))$transcript
all_views$hd_viewing = (all_video_stats %>% group_by(title) %>% summarize(hd_viewing = sum(viewed_hd)))$hd_viewing
View(arche_participants)
ggplot() +
geom_line(data = all_views, mapping = aes(x= title, y= views) , stat = "identity" ,size = 1) +
geom_point(data = all_views, mapping = aes(x= title, y= views) , stat = "identity" ,size = 1)
ggplot() +
geom_line(data = all_views, mapping = aes(x= title, y= views) , stat = "identity" ,group = 1, size = 1) +
geom_point(data = all_views, mapping = aes(x= title, y= views) , stat = "identity" ,group = 1, size = 1)
ggplot() +
geom_line(data = all_views, mapping = aes(x= title, y= views) , stat = "identity" ,group = 1, size = 1) +
geom_point(data = all_views, mapping = aes(x= title, y= views) , stat = "identity" ,group = 1, size = 2,color = "red") +
geom_line(data = all_views, mapping = aes(x= title, y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_point(data = all_views, mapping = aes(x= title, y= captions) , stat = "identity" ,group = 1, size = 1)
ggplot(data = all_views, aes(x=title)) +
geom_line( mapping = aes(y= views) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= views) , stat = "identity" ,group = 1, size = 2,color = "red") +
geom_line(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1)
ggplot(data = all_views, aes(x=title)) +
geom_line( mapping = aes(y= views) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= views) , stat = "identity" ,group = 1, size = 2,color = "red") +
geom_line(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_line(mapping = aes(y= transcript) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= transcript) , stat = "identity" ,group = 1, size = 1)
ggplot(data = all_views, aes(x=title)) +
geom_line( mapping = aes(y= views) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= views) , stat = "identity" ,group = 1, size = 2,color = "red") +
geom_line(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_line(mapping = aes(y= transcript) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= transcript) , stat = "identity" ,group = 1, size = 1) +
geom_line(mapping = aes(y= hd_viewing) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= hd_viewing) , stat = "identity" ,group = 1, size = 1)
views
all_views = melt(all_views, id.vars = c('title'))
ggplot(data = all_views, aes(x=title)) +
geom_line( mapping = aes(y= views) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= views) , stat = "identity" ,group = 1, size = 2,color = "red") +
geom_line(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= captions) , stat = "identity" ,group = 1, size = 1) +
geom_line(mapping = aes(y= transcript) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= transcript) , stat = "identity" ,group = 1, size = 1) +
geom_line(mapping = aes(y= hd_viewing) , stat = "identity" ,group = 1, size = 1) +
geom_point(mapping = aes(y= hd_viewing) , stat = "identity" ,group = 1, size = 1)
View(all_views)
ggplot(data = all_views, aes(x=title,y= value, fill = variable )) +
geom_line( ) +
geom_point()
ggplot(data = all_views, aes(x=title,y= value, fill = variable )) +
geom_line(group = 1) +
geom_point()
ggplot(data = all_views, aes(x=title,y= value, fill = variable , group = variable)) +
geom_line() +
geom_point()
ggplot(data = all_views, aes(x=title,y= value, fill = variable , group = variable, color = variable)) +
geom_line() +
geom_point()
ggplot(data = all_views, aes(x=title,y= value, fill = variable , group = variable, color = variable)) +
geom_line() +
geom_point() +
labs(fill = "Video stats")
ggplot(data = all_views, aes(x=title,y= value,  group = variable, color = variable)) +
geom_line() +
geom_point() +
labs(fill = "Video stats")
ggplot(data = all_views, aes(x=title,y= value, fill = variable , color = variable)) +
geom_line() +
geom_point() +
labs(fill = "Video stats")
ggplot(data = all_views, aes(x=title,y= value, fill = variable , group = variable, color = variable)) +
geom_line() +
geom_point() +
labs(fill = "Video stats")
colnames(all_views)[2] = c("video_stats")
ggplot(data = all_views, aes(x=title,y= value, fill = variable , group = variable, color = variable)) +
geom_line() +
geom_point() +
ylab("Video stats")
ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line() +
geom_point() +
ylab("Video stats")
ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45), hjust =1)
ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
video_stats_views_plot = ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/video_stats_views_plot.png",width = 1920, height = 1080)
grid.arrange(video_stats_views_plot)
dev.off()
###ANalysing the device  used.
all_devices = all_video_stats %>% group_by(title) %>% summarize(console_devices = mean(console_device_percentage))
all_devices$desktop_devices = all_video_stats %>% group_by(title) %>% summarize(desktop_devices = mean(desktop_device_percentage))$desktop_devices
###ANalysing the device  used.
all_devices = all_video_stats %>% group_by(title) %>% summarize(console_devices = mean(console_device_percentage))
all_devices$desktop_devices = all_video_stats %>% group_by(title) %>% summarize(desktop_devices = mean(desktop_device_percentage))$desktop_devices
all_devices$desktop_devices = (all_video_stats %>% group_by(title) %>% summarize(desktop_devices = mean(desktop_device_percentage))$desktop_devices
all_devices$tv_devices = (all_video_stats %>% group_by(title) %>% summarize(tv_devices = mean(tv_device_percentage))$tv_devices
all_devices$desktop_devices = (all_video_stats %>% group_by(title) %>% summarize(desktop_devices = mean(desktop_device_percentage)))$desktop_devices
all_devices$mobile_devices = (all_video_stats %>% group_by(title) %>% summarize(mobile_devices = mean(mobile_device_percentage)))$mobile_devices
all_devices$tv_devices = (all_video_stats %>% group_by(title) %>% summarize(tv_devices = mean(tv_device_percentage)))$tv_devices
all_devices$tablet_devices = (all_video_stats %>% group_by(title) %>% summarize(tablet_devices = mean(tablet_device_percentage)))$tv_devices
all_devices$tablet_devices = (all_video_stats %>% group_by(title) %>% summarize(tablet_devices = mean(tablet_device_percentage)))$tablet_devices
View(all_devices)
all_devices = melt(all_devices, id.vars = c('title'))
colnames(all_devices)[2] = c("devices_used")
ggplot(data = all_devices, aes(x=title,y= value, fill = devices_used , group = devices_used, color = devices_used))+
geom_bar(position="dodge", stat="identity")
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15)) +
scale_fill_brewer(palette = "Pastel1")
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/leaving_reason_plot.png",width = 1920, height = 1080)
grid.arrange(leaving_reason_plot)
dev.off()
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15)) +
scale_fill_brewer(palette = "Pastel2")
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/leaving_reason_plot.png",width = 1920, height = 1080)
grid.arrange(leaving_reason_plot)
dev.off()
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15)) +
scale_fill_brewer(palette = "Pastel9")
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/leaving_reason_plot.png",width = 1920, height = 1080)
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15)) +
scale_fill_brewer(palette = "Pastel3")
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15)) +
scale_fill_brewer(palette = "Pastel1")
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/leaving_reason_plot.png",width = 1920, height = 1080)
grid.arrange(leaving_reason_plot)
dev.off()
############___________#############
all_continents = all_video_stats %>% group_by(title) %>% summarize(europe_views = mean(europe_views_percentage))
all_continents$oceania_views = (all_video_stats %>% group_by(title) %>% summarize(oceania_views = mean(oceania_views_percentage)))$oceania_views
all_continents$asia_views = (all_video_stats %>% group_by(title) %>% summarize(asia_views = mean(asia_views_percentage)))$asia_views
all_continents$north_america_views = (all_video_stats %>% group_by(title) %>% summarize(north_america_views = mean(north_america_views_percentage)))$north_america_views
all_continents$south_america_views = (all_video_stats %>% group_by(title) %>% summarize(south_america_views = mean(south_america_views_percentage)))$south_america_views
all_continents$africa_views = (all_video_stats %>% group_by(title) %>% summarize(africa_views = mean(africa_views_percentage)))$africa_views
all_continents = melt(all_continents, id.vars = c('title'))
colnames(all_continents)[2] = c("continents")
ggplot(data = all_continents, aes(x=title,y= value, fill = continents , group = continents, color = continents))+
geom_bar(position="dodge", stat="identity")
############___________#############
all_continents = all_video_stats %>% group_by(title) %>% summarize(europe_views = mean(europe_views_percentage))
all_continents$oceania_views = (all_video_stats %>% group_by(title) %>% summarize(oceania_views = mean(oceania_views_percentage)))$oceania_views
all_continents$asia_views = (all_video_stats %>% group_by(title) %>% summarize(asia_views = mean(asia_views_percentage)))$asia_views
all_continents$north_america_views = (all_video_stats %>% group_by(title) %>% summarize(north_america_views = mean(north_america_views_percentage)))$north_america_views
all_continents$south_america_views = (all_video_stats %>% group_by(title) %>% summarize(south_america_views = mean(south_america_views_percentage)))$south_america_views
all_continents$africa_views = (all_video_stats %>% group_by(title) %>% summarize(africa_views = mean(africa_views_percentage)))$africa_views
View(all_continents)
all_continents_df <- data.frame(colMeans(all_continents))
all_continents_df <- colMeans(all_continents)
all_continents_df <- colMeans(all_continents[,2:])
all_continents_df <- colMeans(all_continents[,2:ncol()])
all_continents_df <- colMeans(all_continents[,2:ncol(all_continents)])
View(all_continents)
all_Continent_Df
View(all_continents)
all_continents_df
class(all_continents_df)
all_continents_df <- as.data.frame(colMeans(all_continents[,2:ncol(all_continents)]))
View(all_continents_df)
all_continents_df <- as.data.frame(view_percentage = colMeans(all_continents[,2:ncol(all_continents)]))
colnames(all_continents_df)[1] = c("view_percentage")
ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, fill = row.names(all_continents_df) , group = row.names(all_continents_df), color = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity")
ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, fill = row.names(all_continents_df) , group = row.names(all_continents_df), color = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Continents") +
xlab("continents")
ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, fill = row.names(all_continents_df) ,  color = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Continents") +
xlab("continents")
ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, group = row.names(all_continents_df), color = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Continents") +
xlab("continents")
fill = row.names(all_continents_df) ,
ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, fill = row.names(all_continents_df) , group = row.names(all_continents_df), color = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Continents") +
xlab("continents")
ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, fill = row.names(all_continents_df) , group = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Continents") +
xlab("continents")
View(fully_particiapted_df)
View(all_enrol_particiapted)
all_enrol_particiapted_df = all_enrol_particiapted[all_enrol_particiapted$detected_country != "--",]
View(all_enrol_particiapted_df)
ggplot(data=countries_df_sorted, aes(x=countries, y=number_of_learners)) +
geom_bar(stat="identity")
ggplot() +
geom_line(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1, size = 1))+
geom_point(color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
ggplot() +
geom_line(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1),  size = 1)+
geom_point(color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
ggplot() +
geom_line(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1),  size = 1)+
geom_point(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1),color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
ggplot(data=countries_df_sorted[1:100,], aes(x=reorder(countries,-number_of_learners), y=number_of_learners, group=1)) +
geom_line(size = 1)+
geom_point(color = "red",size = 2) +
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
part_countries_df = data.frame(table(all_enrol_particiapted_df$detected_country))
View(part_countries_df)
colnames(part_countries_df) = c("countries","number_of_learners")
all_enrol_particiapted_df = all_enrol_particiapted[all_enrol_particiapted$detected_country != "--",]
part_countries_df = data.frame(table(all_enrol_particiapted_df$detected_country))
colnames(part_countries_df) = c("countries","number_of_learners")
part_enrol_all <- merge(x= countries_df_sorted ,y=part_countries_df,  by = "countries", all.x=TRUE)
View(part_enrol_all)
colnames(part_enrol_all) = c("countries","enrolled","participated")
part_enrol_all = arrange(part_enrol_all, desc(enrolled))
part_enrol_all = melt(part_enrol_all, id.vars = c('countries'))
part_enrol_all = melt(part_enrol_all, id.vars = c('countries'))
colnames(part_enrol_all) = c("country", "status", "value")
all_enrol_particiapted_df = all_enrol_particiapted[all_enrol_particiapted$detected_country != "--",]
part_countries_df = data.frame(table(all_enrol_particiapted_df$detected_country))
colnames(part_countries_df) = c("countries","number_of_learners")
part_enrol_all <- merge(x= countries_df_sorted ,y=part_countries_df,  by = "countries", all.x=TRUE)
colnames(part_enrol_all) = c("countries","enrolled","participated")
part_enrol_all = arrange(part_enrol_all, desc(enrolled))
part_enrol_all = melt(part_enrol_all, id.vars = c('countries'))
colnames(part_enrol_all) = c("country", "status", "value")
######################
#######
plot_countries = ggplot(data=countries_df_sorted[1:100,], aes(x=countries, group=1)) +
geom_line(mapping = aes(y=values), size = 1)+
geom_point(mapping = aes(y=values), color = "red",size = 2)
plot_countries
xlab("Countries") +
ylab("No. of learners") +
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
######################
#######
plot_countries = ggplot(data=part_enrol_all, aes(x=countries, y=values, group=1)) +
geom_line(size = 1)+
geom_point(color = "red",size = 2)+
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
plot_countries
######################
#######
plot_countries = ggplot(data=part_enrol_all, aes(x=country, y=value, group=1)) +
geom_line(size = 1)+
geom_point(color = "red",size = 2)+
theme(text= element_text(size = 20), axis.text.x =  element_text(size = 12))
plot_countries
View(all_views)
plot_countries = ggplot(data = part_enrol_all, aes(x=country, y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
plot_countries
install.packages(BBmisc)
install.packages("BBmisc")
library(BBmisc)
all_enrol_particiapted_df = all_enrol_particiapted[all_enrol_particiapted$detected_country != "--",]
part_countries_df = data.frame(table(all_enrol_particiapted_df$detected_country))
colnames(part_countries_df) = c("countries","number_of_learners")
part_enrol_all <- merge(x= countries_df_sorted ,y=part_countries_df,  by = "countries", all.x=TRUE)
colnames(part_enrol_all) = c("countries","enrolled","participated")
part_enrol_all = arrange(part_enrol_all, desc(enrolled))
all_enrol_particiapted_df = all_enrol_particiapted[all_enrol_particiapted$detected_country != "--",]
part_countries_df = data.frame(table(all_enrol_particiapted_df$detected_country))
colnames(part_countries_df) = c("countries","number_of_learners")
part_enrol_all <- merge(x= countries_df_sorted ,y=part_countries_df,  by = "countries", all.x=TRUE)
colnames(part_enrol_all) = c("countries","enrolled","participated")
part_enrol_all = arrange(part_enrol_all, desc(enrolled))
part_enrol_all = normalize(part_enrol_all[,c(2,3)], method = "range", range = c(0,1))
all_enrol_particiapted_df = all_enrol_particiapted[all_enrol_particiapted$detected_country != "--",]
part_countries_df = data.frame(table(all_enrol_particiapted_df$detected_country))
colnames(part_countries_df) = c("countries","number_of_learners")
part_enrol_all <- merge(x= countries_df_sorted ,y=part_countries_df,  by = "countries", all.x=TRUE)
colnames(part_enrol_all) = c("countries","enrolled","participated")
part_enrol_all = arrange(part_enrol_all, desc(enrolled))
part_enrol = normalize(part_enrol_all[,c(2,3)], method = "range", range = c(0,1))
part_enrol = cbind(part_enrol, part_enrol_all$countries)
View(part_enrol)
all_enrol_particiapted_df = all_enrol_particiapted[all_enrol_particiapted$detected_country != "--",]
part_countries_df = data.frame(table(all_enrol_particiapted_df$detected_country))
colnames(part_countries_df) = c("countries","number_of_learners")
part_enrol_all <- merge(x= countries_df_sorted ,y=part_countries_df,  by = "countries", all.x=TRUE)
colnames(part_enrol_all) = c("countries","enrolled","participated")
part_enrol_all = arrange(part_enrol_all, desc(enrolled))
part_enrol = normalize(part_enrol_all[,c(2,3)], method = "range", range = c(0,1))
part_enrol = cbind(part_enrol, countries = part_enrol_all$countries)
part_enrol_all = melt(part_enrol_all, id.vars = c('countries'))
colnames(part_enrol_all) = c("country", "status", "value")
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col(color = "black") +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
scale_fill_brewer(palette = "Pastel1") +
theme(text= element_text(size = 20))
plot_countries = ggplot(data = part_enrol_all, aes(x=country, y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
plot_countries
part_enrol_all = melt(part_enrol, id.vars = c('countries'))
colnames(part_enrol) = c("country", "status", "value")
colnames(part_enrol_all) = c("country", "status", "value")
plot_countries = ggplot(data = part_enrol_all, aes(x=country, y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
plot_countries
plot_countries = ggplot(data = part_enrol_all, aes(x=country, y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
plot_countries
plot_countries = ggplot(data = part_enrol_all, aes(x=country, y= reorder(value, -value), fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
plot_countries
plot_countries = ggplot(data = part_enrol_all, aes(x=reorder(country, -value), y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
plot_countries
part_enrol_all = arrange(part_enrol_all, desc(value))
plot_countries = ggplot(data = part_enrol_all[1:100,], aes(x=reorder(country, -value), y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))
plot_countries
plot_countries = ggplot(data = part_enrol_all[1:100,], aes(x=reorder(country, -value), y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
xlab("countries")
plot_countries
###### saving the plots for learners from different countries
country_layout = rbind(c(2,2),c(2,2), c(2,2),c(1,1),c(1,1),c(1,1))
png(file="C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png",width = 1920, height = 1080)
grid.arrange(plot_countries,top9_countries , layout_matrix = country_layout )
dev.off()
