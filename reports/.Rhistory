geom_line(data = all_high_education_level_part, mapping = aes(highest_education_level, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_high_education_level_part, mapping = aes(highest_education_level, color = "fully participated") , stat = "count", group = 1, size = 3)+
# theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot4 = ggplot() +
geom_bar(data = all_emp_status, mapping = aes(employment_status,fill=employment_status), stat = "count", group = 1) +
geom_line(data = all_emp_status_part, mapping = aes(employment_status, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_status_part, mapping = aes(employment_status, color = "fully participated") , stat = "count", group = 1, size = 3)+
theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black"))
lay = rbind(c(1,1),c(1,1),c(2,3),c(4,5))
completed_vs_enrolled = grid.arrange(test_plot5, test_plot1,test_plot2,test_plot3,test_plot4, layout_matrix = lay)
completed_vs_enrolled
test_plot1 = ggplot() +
geom_bar(data = all_gender, mapping = aes(gender,fill=gender), stat = "count", group = 1) +
geom_line(data = all_gender_part, mapping = aes(gender, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_gender_part, mapping = aes(gender, color = "fully participated") , stat = "count", group = 1, size = 3)+
# theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot2 = ggplot() +
geom_bar(data = all_age_range, mapping = aes(age_range,fill=age_range), stat = "count", group = 1) +
geom_line(data = all_age_range_part, mapping = aes(age_range, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_age_range_part, mapping = aes(age_range, color = "fully participated") , stat = "count", group = 1, size = 3)+
# theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot3 = ggplot() +
geom_bar(data = all_high_education_level, mapping = aes(highest_education_level,fill=highest_education_level), stat = "count", group = 1) +
geom_line(data = all_high_education_level_part, mapping = aes(highest_education_level, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_high_education_level_part, mapping = aes(highest_education_level, color = "fully participated") , stat = "count", group = 1, size = 3)+
# theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot4 = ggplot() +
geom_bar(data = all_emp_status, mapping = aes(employment_status,fill=employment_status), stat = "count", group = 1) +
geom_line(data = all_emp_status_part, mapping = aes(employment_status, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_status_part, mapping = aes(employment_status, color = "fully participated") , stat = "count", group = 1, size = 3)+
# theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black"))
lay = rbind(c(1,1),c(1,1),c(2,3),c(4,5))
completed_vs_enrolled = grid.arrange(test_plot5, test_plot1,test_plot2,test_plot3,test_plot4, layout_matrix = lay)
completed_vs_enrolled
completed_vs_enrolled
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/completed_vs_enrolled.png")
plot(completed_vs_enrolled)
grid.arrange(test_plot5, test_plot1,test_plot2,test_plot3,test_plot4, layout_matrix = lay)
completed_vs_enrolled = grid.arrange(test_plot5, test_plot1,test_plot2,test_plot3,test_plot4, layout_matrix = lay)
completed_vs_enrolled
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/completed_vs_enrolled.png")
plot(completed_vs_enrolled)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/completed_vs_enrolled.png")
plot(completed_vs_enrolled)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/completed_vs_enrolled.png")
plot(completed_vs_enrolled)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/completed_vs_enrolled.png")
plot(completed_vs_enrolled)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
load.project()
source("./src/eda.R")
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/enrol_vs_comp_plot.png")
plot(enrol_vs_comp_plot)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/completed_vs_enrolled.png")
plot(completed_vs_enrolled)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/archetype_enrolled_Vs_completed.png")
plot(arche_plot)
# knitr::include_graphics("./graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/continent_plot.png")
plot(continent_plot)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png")
plot(countrywise_enrolments)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/devices_used_plot1.png")
plot(devices_used_plot1)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/completed_vs_enrolled.png")
plot(completed_vs_enrolled)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
setwd("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/reports")
knitr::include_graphics("./graphs/leaving_reason_plot.png")
knitr::include_graphics("../graphs/leaving_reason_plot.png")
# plot(leaving_reason_plot)
getwd()
# knitr::include_graphics("../graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
# knitr::include_graphics("../graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
# theme(text = element_text(size = 15)) +
scale_fill_brewer(palette = "YlGnBu")
leaving_reason_plot
# knitr::include_graphics("../graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
# knitr::include_graphics("../graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
# knitr::include_graphics("../graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
# knitr::include_graphics("../graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
# knitr::include_graphics("../graphs/leaving_reason_plot.png")
plot(leaving_reason_plot)
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15), )+
scale_fill_brewer(palette = "Accent")
leaving_reason_plot
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Accent")
devices_used_plot1
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Paired")
devices_used_plot1
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15), )+
scale_fill_brewer(palette = "Paired")
leaving_reason_plot
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15), )+
scale_fill_brewer(palette = "Dark2")
leaving_reason_plot
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15), )+
scale_fill_brewer(palette = "Set3")
leaving_reason_plot
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Set3")
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Set3")
devices_used_plot1
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Set3")
devices_used_plot1
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Set2")
devices_used_plot1
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Accent")
devices_used_plot1
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15), )+
scale_fill_brewer(palette = "Accent")
leaving_reason_plot
continent_plot = ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, fill = row.names(all_continents_df) , group = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Continents") +
xlab("continents")+
scale_fill_brewer(palette = "Accent")
continent_plot
video_stats_views_plot = ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line() +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))+
scale_fill_brewer(palette = "Accent")
video_stats_views_plot
video_stats_views_plot = ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line(size = 1) +
geom_point() +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))+
scale_fill_brewer(palette = "Accent")
video_stats_views_plot
video_stats_views_plot = ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line(size = 1) +
geom_point(size = 2) +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))+
scale_fill_brewer(palette = "Accent")
video_stats_views_plot
plot_countries = ggplot(data = part_enrol_all[1:100,], aes(x=reorder(country, -value), y= value, fill = status , group = status, color = status)) +
geom_line() +
geom_point() +
xlab("countries")
plot_countries
plot_countries = ggplot(data = part_enrol_all[1:100,], aes(x=reorder(country, -value), y= value, fill = status , group = status, color = status)) +
geom_line(size =1) +
geom_point(size = 2) +
xlab("countries")
plot_countries
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col(color = "black") +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
scale_fill_brewer(palette = "Accent") +
theme(text= element_text(size = 20))
top9_countries
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col() +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
scale_fill_brewer(palette = "Accent") +
theme(text= element_text(size = 20))
top9_countries
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col() +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
scale_fill_brewer(palette = "Pastel2") +
theme(text= element_text(size = 20))
top9_countries
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col() +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
scale_fill_brewer(palette = "Pastel1") +
theme(text= element_text(size = 20))
top9_countries
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col() +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
#scale_fill_brewer(palette = "Pastel1") +
theme(text= element_text(size = 20))
top9_countries
top9_countries = ggplot(countries_df_sorted[1:9,], aes(x = "", y = number_of_learners, fill = countries)) +
geom_col() +
geom_text(aes(label = number_of_learners),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "countries")) +
scale_fill_brewer(palette = "Pastel1") +
theme(text= element_text(size = 20))
top9_countries
plot_countries = ggplot(data = part_enrol_all[1:100,], aes(x=reorder(country, -value), y= value, fill = status , group = status, color = status)) +
geom_line(size =1) +
geom_point(size = 2) +
xlab("countries")
plot_countries
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15), )+
scale_fill_brewer(palette = "Pastel1")
leaving_reason_plot
video_stats_views_plot = ggplot(data = all_views, aes(x=title,y= value, fill = video_stats , group = video_stats, color = video_stats)) +
geom_line(size = 1) +
geom_point(size = 2) +
ylab("Video stats") +
theme(axis.text.x = element_text(angle = 45, hjust =1))+
scale_fill_brewer(palette = "Pastel1")
video_stats_views_plot
leaving_reason_plot = ggplot(data = all_leaving_survey, aes(leaving_reason, fill = leaving_reason, color = leaving_reason)) +
geom_bar()+
coord_polar()+
theme(text = element_text(size = 15), )+
scale_fill_brewer(palette = "Pastel1")
leaving_reason_plot
continent_plot = ggplot(data = all_continents_df, aes(x=row.names(all_continents_df), y= view_percentage, fill = row.names(all_continents_df) , group = row.names(all_continents_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Continents") +
xlab("continents")+
scale_fill_brewer(palette = "Pastel1")
continent_plot
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df)))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Pastel1")
devices_used_plot1
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df), color = row.names(all_devices_df) ))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Pastel1")
devices_used_plot1
devices_used_plot1 = ggplot(data = all_devices_df, aes(x=row.names(all_devices_df), y= devices_used, fill = row.names(all_devices_df) , group = row.names(all_devices_df) ))+
geom_bar(position="dodge", stat="identity") +
labs(fill = "Devices used") +
xlab("Devices used") +
scale_fill_brewer(palette = "Pastel1")
devices_used_plot1
test_plot1 = ggplot() +
geom_bar(data = all_gender, mapping = aes(gender,fill=gender), stat = "count", group = 1) +
geom_line(data = all_gender_part, mapping = aes(gender, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_gender_part, mapping = aes(gender, color = "fully participated") , stat = "count", group = 1, size = 3)+
theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black"))+
scale_fill_brewer(palette = "Pastel1")
test_plot1
test_plot2 = ggplot() +
geom_bar(data = all_age_range, mapping = aes(age_range,fill=age_range), stat = "count", group = 1) +
geom_line(data = all_age_range_part, mapping = aes(age_range, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_age_range_part, mapping = aes(age_range, color = "fully participated") , stat = "count", group = 1, size = 3)+
theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black")) +
scale_fill_brewer(palette = "Pastel1")
test_plot2
test_plot3 = ggplot() +
geom_bar(data = all_high_education_level, mapping = aes(highest_education_level,fill=highest_education_level), stat = "count", group = 1) +
geom_line(data = all_high_education_level_part, mapping = aes(highest_education_level, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_high_education_level_part, mapping = aes(highest_education_level, color = "fully participated") , stat = "count", group = 1, size = 3)+
theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black")) +
scale_fill_brewer(palette = "Pastel1")
test_plot3
test_plot4 = ggplot() +
geom_bar(data = all_emp_status, mapping = aes(employment_status,fill=employment_status), stat = "count", group = 1) +
geom_line(data = all_emp_status_part, mapping = aes(employment_status, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_status_part, mapping = aes(employment_status, color = "fully participated") , stat = "count", group = 1, size = 3)+
theme(legend.key=element_blank(),legend.box="vertical", text = element_text(size = 15))+
scale_colour_manual(" ", values=c("fully participated" = "black")) +
scale_fill_brewer(palette = "Pastel1")
test_plot4
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black")) +
scale_fill_brewer(palette = "Pastel1")
test_plot5
test_plot5
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black")) +
scale_fill_brewer(palette = "RdYlBu")
test_plot5
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
mycolors = c(brewer.pal(name="Pastel1", n = 10), brewer.pal(name="Pastel2", n = 10))
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black")) +
scale_color_manual(values = mycolors)
values
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=mycolors) +
lay = rbind(c(1,1),c(1,1),c(2,3),c(4,5))
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values = mycolors)
test_plot5
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black")) +
lay = rbind(c(1,1),c(1,1),c(2,3),c(4,5))
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot5
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black")) +
scale_colour_manual(values = mycolors)
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot5
completed_vs_enrolled = grid.arrange(test_plot5, test_plot1,test_plot2,test_plot3,test_plot4, layout_matrix = lay)
completed_vs_enrolled
weeklysentiment_analysis <- wordcloud2(data=df ,size=1.6, color='random-dark')
saveWidget(weeklysentiment_analysis, "tmp.html", selfcontained = F)
webshot("tmp.html", "wc1.png", delay = 10, vwidth = 2000, vheight = 2000)
```{r, echo = FALSE, out.width="100%", fig.height=5, fig.width=5 ,fig.cap="Weekly feedback about the course", warning=FALSE}
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "Dark2"))
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "Dark2"), colors="black", )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors="black", )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "Accent") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "Dark2") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "RdYlBu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "RdPu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=TRUE, rot.per=0.35, colors=brewer.pal(10, "RdPu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "RdPu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(15, "RdPu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(2, "RdPu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(10, "RdPu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(20, "RdPu") )
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(20, "Dark2") )
weeklysentiment_analysis <- wordcloud2(data=df ,size=1.6, color='random-dark')
saveWidget(weeklysentiment_analysis, "tmp.html", selfcontained = F)
webshot("tmp.html", "weeklysentiment_analysis.png", delay = 10, vwidth = 2000, vheight = 2000)
```{r, echo = FALSE, out.width="100%", fig.height=5, fig.width=5 ,fig.cap="Weekly feedback about the course", warning=FALSE}
# knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(20, "Dark2") )
weeklysentiment_analysis <- wordcloud2(data=df ,size=1.6, color='random-dark')
saveWidget(weeklysentiment_analysis, "tmp.html", selfcontained = F)
webshot("tmp.html", "weeklysentiment_analysis.png", delay = 10, vwidth = 2000, vheight = 2000)
weeklysentiment_analysis <- wordcloud2(data=df ,size=1.6, color='random-dark')
saveWidget(weeklysentiment_analysis, "tmp.html", selfcontained = F)
webshot("tmp.html", "weeklysentiment_analysis.png", delay = 10, vwidth = 2000, vheight = 2000)
knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
weeklysentiment_analysis <- wordcloud2(data=df ,size=1.6, color='random-dark')
saveWidget(weeklysentiment_analysis, "tmp.html", selfcontained = F)
webshot("tmp.html", "weeklysentiment_analysis.png", delay = 10, vwidth = 2000, vheight = 2000)
knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
weeklysentiment_analysis <- wordcloud2(data=df ,size=1.6, color='random-dark')
saveWidget(weeklysentiment_analysis, "tmp.html", selfcontained = F)
webshot("tmp.html", "weeklysentiment_analysis.png", delay = 10, vwidth = 2000, vheight = 2000)
knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
#knitr::include_graphics("../graphs/weeklysentiment_analysis.png")
wordcloud(words = df$word, freq = df$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(20, "Dark2") )
#mycolors = c(brewer.pal(name="Pastel1", n = 10), brewer.pal(name="Pastel2", n = 10))
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black"))
test_plot5 = ggplot() +
geom_bar(data = all_emp_area, mapping = aes(employment_area,fill=employment_area), stat = "count", group = 1) +
geom_line(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1 ,size = 1) +
geom_point(data = all_emp_area_part, mapping = aes(employment_area, color = "fully participated") , stat = "count", group = 1, size = 3) +
scale_colour_manual(" ", values=c("fully participated" = "black"))
knitr::include_graphics("/graphs/enrol_vs_comp_plot.png")
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/enrol_vs_comp_plot.png")
plot(enrol_vs_comp_plot)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/continent_plot.png")
plot(continent_plot)
# knitr::include_graphics("C:/Users/Payal/Desktop/Future_Learn_EDA_DM/graphs/countrywise_enrolments.png")
plot(countrywise_enrolments)
#
# # for first batch
# idx_fully_participated1 = which(enrolment_1$fully_participated_at != "")
# idx_fully_participated1
#
# fully_particiapted_df1 = enrolment_1[idx_fully_participated1,]
#
# high_edu_lvl1 = data.frame(fully_particiapted_df1$highest_education_level[fully_particiapted_df1$highest_education_level != "Unknown"])
# colnames(high_edu_lvl1) = "highest_education_level"
#
ggplot() +
geom_bar(high_edu_lvl1, mapping = aes(highest_education_level,fill=highest_education_level), stat = "count", position = position_dodge())
edu_lvl_fp_plot
edu_lvl_fp_plot = grid.arrange(h1_fp,h2_fp,h3_fp,h4_fp,h5_fp,h6_fp,h7_fp)
edu_lvl_fp_plot
